# Clear variables
rm(list=ls())
#Get path
path<-getwd(); path
# Set path
setwd(path)
library(BiocGenerics)
library(BiocManager)
library(edgeR)
library(DESeq2)
library(ggplot2)
library(readr)
library(dplyr)
GSM6160812 <- read_delim("C:/Users/Acer/OneDrive/Ambiente de Trabalho/ICVS/Dataset 3/GSM6160812.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
# Clear variables
rm(list=ls())
#Get path
path<-getwd(); path
# Set path
setwd(path)
library(BiocGenerics)
library(BiocManager)
library(edgeR)
library(DESeq2)
library(ggplot2)
library(readr)
library(dplyr)
GSM6160812 <- read_delim("C:/Users/Acer/OneDrive/Ambiente de Trabalho/ICVS/Dataset 3/GSM6160812.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
# Clear variables
rm(list=ls())
#Get path
path<-getwd(); path
# Set path
setwd(path)
count_table <- read_delim("C:/Users/Acer/OneDrive/Ambiente de Trabalho/ICVS/Dataset 3/count_table.txt",
delim = "\t", escape_double = FALSE,
col_types = cols(...1 = col_skip()),
trim_ws = TRUE)
head(count_table)
expression.matrix = count_table[,-1]
design_tags <- read_delim("C:/Users/Acer/OneDrive/Ambiente de Trabalho/ICVS/Dataset 3/design_tags.tsv",
delim = "\t", escape_double = FALSE,
col_names = FALSE, trim_ws = TRUE)
head(design_tags)
data_info <- as.matrix(design_tags[, -1])
rownames(data_info) <- design_tags$X1
data_info = as.data.frame(data_info)
data_info$X2 = as.factor(data_info$X2)
levels(data_info$X2)
levels(data_info$X2) <- c("Control", "tgfBeta")
head(data_info)
all(rownames(data_info)==colnames(expression.matrix))
dds <- DESeqDataSetFromMatrix(countData = expression.matrix,
colData = data_info,
design= ~ X2)
dds <- DESeq(dds)
resultsNames(dds) # lists the coefficients
res <- results(dds, name="X2_tgfBeta_vs_Control")
res
names = c(count_table$Gene)
rownames(dds) <- names
head(dds)
keep = rowSums(counts(dds) >= 10) >= min(table(data_info$X2))
#>= min(table(data_info$X2))
# this condition implies that we have to see counts >= 10 at least in 3 samples because min(table(data_info$X2)) = 3
#see table(data_info$X2)
dds<- dds[keep,]
head(dds)
dds <- DESeq(dds)
res <- results(dds)
dds
res = as.data.frame(res)
head(res)
res_ordered = res[order(res$pvalue),]
head(res_ordered)
res05 <- results(dds, alpha=0.05)
summary(res05)
sum(res05$padj < 0.05, na.rm=TRUE)
# LFC > 0 + LFC < 0 = 47 + 45 = 92
filtering <- res %>% filter(res$padj <0.05)
filtering <- filtering %>% filter(abs(filtering$log2FoldChange) >1)
filtering
vsd = vst(dds, blind = FALSE)
